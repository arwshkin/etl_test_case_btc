---
version: '3.4'

x-common:
  &common
#  image: apache/airflow:2.3.0
  build: .
  user: "${AIRFLOW_UID}:0"
  env_file: 
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./exchangerate_utils:/home/airflow/.local/lib/python3.7/site-packages/exchangerate_utils
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres-data:
    image: postgres:13
    container_name: postgres-data
    restart: always
    ports:
      - "${DATA_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATA_DB_USER}", "-d", "${DATA_DB_DATABASE}"]
      interval: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DATA_DB_USER}
      - POSTGRES_PASSWORD=${DATA_DB_PASSWORD}
      - POSTGRES_DB=${DATA_DB_DATABASE}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
  
  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p ./logs ./dags ./plugins
        chown -R "${AIRFLOW_UID}:0" ./{logs,dags,plugins}
        exec /entrypoint airflow version